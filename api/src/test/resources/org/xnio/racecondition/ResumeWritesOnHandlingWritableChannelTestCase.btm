
RULE enable race condition scenario
CLASS org.xnio.racecondition.ResumeWritesOnHandlingWritableChannelTestCase
METHOD test
AT INVOKE java.lang.Thread.start 1
IF TRUE
DO
    debug("Enabling race condition scenario"),
    flag("race condition enabled for ResumeWritesOnHandlingWritableChannelTestCase")
ENDRULE

RULE handle writable checked write requested is false
CLASS org.xnio.mock.ConnectedStreamChannelMock
METHOD suspendWrites
AT ENTRY
IF flagged("race condition enabled for ResumeWritesOnHandlingWritableChannelTestCase")
DO
    debug("TranslatingSuspendableChannel just checked that write is not requested... waiting for resumeWrites"),
    signalWake("write not requested checked", true),
    waitFor("write requested"),
    debug("Now write is requested... proceeding with handleWritable after a check that write is not requested")
ENDRULE

RULE resumeWrites after handleWritable checked write is not requested
CLASS org.xnio.channels.TranslatingSuspendableChannel
METHOD resumeWrites
AT ENTRY
IF flagged("race condition enabled for ResumeWritesOnHandlingWritableChannelTestCase")
DO
    debug("resumeWrites... waiting for handle writable to check write is not requested"),
    waitFor("write not requested checked"),
    debug("Proceeding with resumeWrites")
ENDRULE

RULE after resumeWrites
CLASS org.xnio.channels.TranslatingSuspendableChannel
METHOD resumeWrites
AT EXIT
IF flagged("race condition enabled for ResumeWritesOnHandlingWritableChannelTestCase")
DO
    debug("Finished resumeWrites... waking handleWritable"),
    signalWake("write requested", true)
ENDRULE